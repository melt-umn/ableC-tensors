<project name='artifact' default='dist' basedir='.'>
  <description>Generated build script for the grammar artifact</description>

  <property environment='env'/>
  <property name='jg' location='/home/ugrad00/wentz101/Desktop/research/silver/generated/'/>
  <property name='sh' location='/home/ugrad00/wentz101/Desktop/research/silver/'/>
  <property name='bin' location='${jg}/bin'/>
  <property name='src' location='${jg}/src'/>

  <path id='lib.classpath'>
    <pathelement location='${sh}/jars/SilverRuntime.jar' />
    <pathelement location='${sh}/jars/CopperRuntime.jar' />
  </path>

  <path id='compile.classpath'>
    <pathelement location='${src}' />
    <path refid='lib.classpath'/>
    <pathelement location='${sh}/jars/CopperCompiler.jar' />
  </path>

  <taskdef name='copper' classname='edu.umn.cs.melt.copper.ant.CopperAntTask' classpathref='compile.classpath'/>

  <target name='copper'>

    <copper packageName='artifact' parserName='Parser_artifact_extendedParser' outputFile='${src}/artifact/Parser_artifact_extendedParser.java' useSkin='XML' warnUselessNTs='false' avoidRecompile='true' dump='ERROR_ONLY' dumpFormat='HTML' dumpFile='Parser_artifact_extendedParser.copperdump.html'>
      <inputs file='${src}/artifact/Parser_artifact_extendedParser.copper'/>
    </copper>
  </target>

  <target name='init'>
    <tstamp>
      <format property='TIME' pattern='yyyy.MM.dd.HH.mm.ss'/>
    </tstamp>
    <mkdir dir='${bin}'/>
  </target>

  <target name='dist' depends='jars'>
  </target>

  <target name='jars' depends='grammars'>
    <pathconvert refid='lib.classpath' pathsep=' ' property='man.classpath'>
      <filtermapper><replacestring from=' ' to='%20' /></filtermapper>
    </pathconvert>
    <jar destfile='ableC.jar' basedir='${bin}'>
      <include name='silver/util/deque/*.class' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/builtins/*.class' />
      <include name='silver/util/raw/treemap/*.class' />
      <include name='silver/langutil/pp/*.class' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/overload/*.class' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/env/*.class' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/lexerHack/*.class' />
      <include name='silver/langutil/*.class' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/*.class' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/construction/*.class' />
      <include name='edu/umn/cs/melt/ableC/drivers/compile/*.class' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/*.class' />
      <include name='edu/umn/cs/melt/exts/ableC/arrays/*.class' />
      <include name='core/*.class' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/cppTags/*.class' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/c11/*.class' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/gcc_exts/*.class' />
      <include name='edu/umn/cs/melt/exts/ableC/arrays/concretesyntax/*.class' />
      <include name='edu/umn/cs/melt/exts/ableC/arrays/abstractsyntax/*.class' />
      <include name='core/monad/*.class' />
      <include name='artifact/*.class' />
      <manifest>
        <attribute name='Built-By' value='${user.name}' />
        <attribute name='Implementation-Version' value='${TIME}' />
        <attribute name='Main-Class' value='artifact.Main' />
        <attribute name='Class-Path' value='${man.classpath}' />
      </manifest>
    </jar>
  </target>

  <target name='grammars' depends='init, copper'>
    <javac debug='on' classpathref='compile.classpath' srcdir='${src}' destdir='${bin}' includeantruntime='false'>
      <include name='silver/util/deque/*.java' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/builtins/*.java' />
      <include name='silver/util/raw/treemap/*.java' />
      <include name='silver/langutil/pp/*.java' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/overload/*.java' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/env/*.java' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/lexerHack/*.java' />
      <include name='silver/langutil/*.java' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/*.java' />
      <include name='edu/umn/cs/melt/ableC/abstractsyntax/construction/*.java' />
      <include name='edu/umn/cs/melt/ableC/drivers/compile/*.java' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/*.java' />
      <include name='edu/umn/cs/melt/exts/ableC/arrays/*.java' />
      <include name='core/*.java' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/cppTags/*.java' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/c11/*.java' />
      <include name='edu/umn/cs/melt/ableC/concretesyntax/gcc_exts/*.java' />
      <include name='edu/umn/cs/melt/exts/ableC/arrays/concretesyntax/*.java' />
      <include name='edu/umn/cs/melt/exts/ableC/arrays/abstractsyntax/*.java' />
      <include name='core/monad/*.java' />
      <include name='artifact/*.java' />
    </javac>
  </target>
</project>
